[{"/home/meriam/todo/to-do-react/src/index.js":"1","/home/meriam/todo/to-do-react/src/App.js":"2","/home/meriam/todo/to-do-react/src/reportWebVitals.js":"3","/home/meriam/todo/to-do-react/src/redux/store.js":"4","/home/meriam/todo/to-do-react/src/component/TodoInput.js":"5","/home/meriam/todo/to-do-react/src/component/TodoList.js":"6","/home/meriam/todo/to-do-react/src/redux/reducer.js":"7","/home/meriam/todo/to-do-react/src/redux/action.js":"8","/home/meriam/todo/to-do-react/src/component/TodoItem.js":"9","/home/meriam/todo/to-do-react/src/redux/state.js":"10"},{"size":633,"mtime":1611332263843,"results":"11","hashOfConfig":"12"},{"size":458,"mtime":1611332263843,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1611332263847,"results":"14","hashOfConfig":"12"},{"size":145,"mtime":1611332263847,"results":"15","hashOfConfig":"12"},{"size":967,"mtime":1611519767180,"results":"16","hashOfConfig":"12"},{"size":1754,"mtime":1611511445614,"results":"17","hashOfConfig":"12"},{"size":1893,"mtime":1611508872254,"results":"18","hashOfConfig":"12"},{"size":830,"mtime":1611515768862,"results":"19","hashOfConfig":"12"},{"size":2163,"mtime":1611520993617,"results":"20","hashOfConfig":"12"},{"size":395,"mtime":1611332263847,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"occora",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/meriam/todo/to-do-react/src/index.js",[],["45","46"],"/home/meriam/todo/to-do-react/src/App.js",[],"/home/meriam/todo/to-do-react/src/reportWebVitals.js",[],"/home/meriam/todo/to-do-react/src/redux/store.js",[],"/home/meriam/todo/to-do-react/src/component/TodoInput.js",["47"],"/home/meriam/todo/to-do-react/src/component/TodoList.js",["48","49"],"import React , {useState,useEffect} from 'react';\nimport TodoItem from './TodoItem';\nimport { useSelector,useDispatch } from 'react-redux';\nimport {getTodo} from '../redux/action';\nimport axios from 'axios';\n\n\nfunction TodoList(){\n    let dispatch = useDispatch();\n    useEffect(()=>{\n    axios.get(\"http://localhost:3003/todos\").then((res)=>\n        dispatch(getTodo(res.data)))\n    },[])\n const [Completed,setCompleted]=useState(false);\n const [NotCompleted,setNotCompleted]=useState(false);\n let todos = useSelector(state => state.todos);\n console.log('hoo',todos);\n    return(\n        <div className=\"my-4\" >\n           <div className=\"comppart\" style={{display:\"flex\",justifyContent:\"space-around\"}}>\n            <label>\n          Completed\n          <input style={{marginLeft:\"10px\"}}\n            \n            type=\"checkbox\"\n            checked={Completed}\n            onChange={()=>setCompleted(!Completed)} />\n        </label>\n        <label>\n          NotCompleted\n          <input  style={{marginLeft:\"10px\"}}\n            \n            type=\"checkbox\"\n            checked={NotCompleted}\n            onChange={()=>{\n                console.log('NotCompleted',NotCompleted);\n                setNotCompleted(!NotCompleted)}} />\n        </label>\n</div>\n           {todos.filter(todo =>{\n               if((Completed && NotCompleted)||(!Completed && !NotCompleted) ){\n                   return true\n               } else if (Completed) {\n                   return todo.isCompleted\n               } else if (NotCompleted) {\n                   return !todo.isCompleted\n               } \n           })\n           .map(todo =>{\n               return <TodoItem key = {todo.id} todo={todo}/>\n           })}\n\n        </div>\n    )\n}\n\nexport default TodoList","/home/meriam/todo/to-do-react/src/redux/reducer.js",["50","51","52","53"],"\nimport {GET_TODO,ADD_TODO,DELETE_TODO,UPDATE_TODO,COMPLET_TODO} from './action';\nimport {todos} from './state';\n\nexport let reducer = (state = {todos}, action) => {\n     let newTodos;\n       switch (action.type) {\n           case ADD_TODO:\n                newTodos=[...state.todos];\n               newTodos.push(action.payload);\n               return {\n                   ...state,\n                   todos :newTodos,\n                  \n               };\n            \n           case DELETE_TODO:\n                newTodos = [...state.todos];\n              newTodos = newTodos.filter(todo=>todo.id !== action.payload)\n             return {\n                   ...state,\n                   todos :newTodos,\n                  \n               };\n               \n         case UPDATE_TODO:\n               newTodos = [...state.todos];\n               let index = -1 ;\n               for (let i = 0 ; i < newTodos.length ; i++){\n                   index++;\n                   if(newTodos[i].id == action.payload.id){\n                       break;\n                   }\n\n               }\n               if (index !== -1){         \n             newTodos[index]= action.payload;     \n              return {\n                   ...state,\n                   todos :newTodos,\n                  \n               };\n            }\n            case COMPLET_TODO:\n                let id= action.payload;\n           newTodos = state.todos.map((todo) =>\n    id == todo.id ? { ...todo, isCompleted : !todo.isCompleted } : todo\n      );\n      console.log('id',id);\n                return {\n                   ...state,\n                   todos :newTodos,\n                  \n               };\n               case GET_TODO:\n                    newTodos=action.todos;\n                   return {\n                       ...state,\n                   todos :newTodos,\n                   }\n            \n\n }  \nreturn state;\n}\n ","/home/meriam/todo/to-do-react/src/redux/action.js",[],"/home/meriam/todo/to-do-react/src/component/TodoItem.js",["54","55"],"/home/meriam/todo/to-do-react/src/redux/state.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":18,"nodeType":"62","messageId":"63","endLine":2,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":13,"column":7,"nodeType":"66","endLine":13,"endColumn":9,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":40,"column":31,"nodeType":"70","messageId":"71","endLine":40,"endColumn":33},{"ruleId":"72","severity":1,"message":"73","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":63,"endColumn":3},{"ruleId":"76","severity":1,"message":"77","line":31,"column":38,"nodeType":"78","messageId":"79","endLine":31,"endColumn":40},{"ruleId":"80","severity":1,"message":"81","line":44,"column":13,"nodeType":"82","messageId":"83","endLine":54,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":47,"column":8,"nodeType":"78","messageId":"79","endLine":47,"endColumn":10},{"ruleId":"60","severity":1,"message":"84","line":3,"column":18,"nodeType":"62","messageId":"63","endLine":3,"endColumn":27},{"ruleId":"60","severity":1,"message":"85","line":3,"column":29,"nodeType":"62","messageId":"63","endLine":3,"endColumn":39},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'addTodo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["88"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'deletTodo' is defined but never used.","'updateTodo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [dispatch]",{"range":"91","text":"92"},[386,388],"[dispatch]"]